#!/usr/bin/env bash

# This is a simple script to manage vim packages
# and it's an alternative to other complex plugin
# managers

# Print an error message and then exit
function error() {
	>&2 echo "$1" 
}


# Create the needed directories to install the
# plugins
function create_required_dirs() {
	mkdir -p ~/.vim/plugins
	mkdir -p ~/.vim/autoload
}

# Install a plugin
function plugin_install() {
	if [ -z "$1" ]; then
		error "Usage: $0 install [git-repo-url]"
		exit 1
	fi

	plug_name="$1"
	if [[ ! "$plug_name" == "http://*" ]]; then
		plug_name="http://github.com/$plug_name"
		echo "Assuming git repo at $plug_name"
	fi	

	cd ~/.vim/plugins
	git clone $plug_name

	generate_autoload
}

# List installed plugins
function plugin_list() {
	cd ~/.vim/plugins
	ls -d *
}

# Remove plugins
function plugin_remove() {
	if [ -z "$1" ]; then
		error "Usage: $0 remove [plugin-name]"
		exit 1
	fi

	cd ~/.vim/plugins

	if [ ! -d "$1" ]; then
		error "Plugin $1 not installed"
		exit 1
	fi

	rm -rf $1
}

# Update plugins
function plugin_update() {
	cd ~/.vim/plugins
	for plug_name in $(ls -d *); do
		echo "Updating $plug_name"
		cd ~/.vim/plugins/$plug_name
		git pull --rebase origin
	done
}

# Generate vim autoload function
function generate_autoload() {
	echo "\" Generated by virgo" > ~/.vim/autoload/virgo.vim
	echo "function! virgo#load()" >> ~/.vim/autoload/virgo.vim
	cd ~/.vim/plugins
	for dirname in `ls -b`; do
		echo "set rtp+=$(realpath $dirname)" >> ~/.vim/autoload/virgo.vim
	done
	echo "endfunction" >> ~/.vim/autoload/virgo.vim
}

# Print usage information
function usage() {
	error "Usage: $0 [command] [arguments]"
	error
	error "install [git-repo-url]"
	error "list"
	error "remove [plugin-name]"
	error "update"
	exit 1
}

create_required_dirs
if [ "$1" == "install" ]; then
	plugin_install "$2"
elif [ "$1" == "list" ]; then
	plugin_list "$2"
elif [ "$1" == "remove" ]; then
	plugin_remove "$2"
elif [ "$1" == "update" ]; then
	plugin_update "$2"
else
	usage
fi
